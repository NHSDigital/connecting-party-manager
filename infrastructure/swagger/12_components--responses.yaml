---
x-definitions:
  ResponseHeaders:
    type: object
    headers: &ResponseHeaders
      X-Correlation-Id:
        schema:
          $ref: "#/components/schemas/HeaderCorrelationId"
      X-Request-Id:
        schema:
          $ref: "#/components/schemas/HeaderRequestId"

components:
  responses:
    StatusOK:
      description: API is operational
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StatusOK"
      headers:
        <<: *ResponseHeaders
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errors:
              - code: "RESOURCE_NOT_FOUND"
                message: "Could not find <ENTITY> for key ('<ID>')"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errors:
              - code: "CONFLICT"
                message: "Product Team cannot be deleted as it still has associated Product Ids ['P.123-XYZ', 'P.456-ABC']"
    BadRequest:
      description: Bad request (multiple error types)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            MissingValue:
              value:
                errors:
                  - code: "MISSING_VALUE"
                    message: "<MISSING_FIELD>: field required"
                  - code: "MISSING_VALUE"
                    message: "Failed to validate data against '<QUESTIONNAIRE>': '<MISSING_FIELD>' is a required property"
            ValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "Item already exists"
                  - code: "VALIDATION_ERROR"
                    message: "Expected only one response for the '<QUESTIONNAIRE _NAME>' questionnaire"
                  - code: "VALIDATION_ERROR"
                    message: "Require a 'spine_mhs' questionnaire response to create a MHS Device"
                  - code: "VALIDATION_ERROR"
                    message: "Not an EPR Product: Cannot create MHS device for product without exactly one Party Key"
                  - code: "VALIDATION_ERROR"
                    message: "Duplicate 'Interaction ID' provided: value '<INTERACTION ID>' occurs <N> times in the questionnaire response."
                  - code: "VALIDATION_ERROR"
                    message: "SubCpmProductPathParams.environment: value is not a valid enumeration member; permitted: 'dev', 'qa', 'ref', 'int', 'prod'"
    SearchProductBadRequest:
      description: searchProduct Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            ValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "SearchProductQueryParams.__root__: Please provide exactly one valid query parameter: {'product_team_id', 'organisation_code'}."
                  - code: "VALIDATION_ERROR"
                    message: "SearchSDSDeviceQueryParams.foo: extra fields not permitted"
      headers:
        Access-Control-Allow-Origin:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            ValidationErrorExtraFields:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "SearchSDSEndpointQueryParams.foo: extra fields not permitted"
            ValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "SearchSDSEndpointQueryParams.__root__: At least 2 query parameters should be provided of type, nhs_id_code, nhs_mhs_svc_ia and nhs_mhs_party_key"
    SearchProductBadRequest:
      description: searchProduct Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            ValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "SearchProductQueryParams.__root__: Please provide exactly one valid query parameter: {'product_team_id', 'organisation_code'}."
                  - code: "VALIDATION_ERROR"
                    message: "SearchSDSDeviceQueryParams.foo: extra fields not permitted"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          example: "*"
    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errors:
              - code: "UNPROCESSABLE_ENTITY"
                message: "Invalid ODS Code: could not resolve 'https://directory.spineservices.nhs.uk/ORD/2-0-0/organisations/invalid_ods_code'"
    CPMProductTeamCreate:
      description: Create ProductTeam operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductTeamResponse"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          example: "*"
    CPMProductTeamRead:
      description: Read ProductTeam operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductTeamResponse"
    CpmProductTeamDelete:
      description: Delete Product Team operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductTeamDeleteResponse"
    ProductCreate:
      description: Create Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductResponse"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          example: "*"
    ProductRead:
      description: Read Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductResponse"
    ProductDelete:
      description: Delete Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductDeleteResponse"
    ProductSearch:
      description: Search Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductSearchResponse"
