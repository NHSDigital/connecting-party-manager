---
x-definitions:
  ResponseHeaders:
    type: object
    headers: &ResponseHeaders
      X-Correlation-Id:
        schema:
          $ref: "#/components/schemas/HeaderCorrelationId"
      X-Request-Id:
        schema:
          $ref: "#/components/schemas/HeaderRequestId"

components:
  responses:
    StatusOK:
      description: API is operational
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StatusOK"
      headers:
        <<: *ResponseHeaders
    ProductTeamNotFound:
      description: Product Team has not been found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errors:
              - code: "RESOURCE_NOT_FOUND"
                message: "Could not find ProductTeam for key ('f9518c12-6c83-4544-97db-d9dd1d64da97')"
    ProductNotFound:
      description: Product has not been found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errors:
              - code: "RESOURCE_NOT_FOUND"
                message: "Could not find CpmProduct for key ('P.XXX-YYY')"
    ProductDeleteNotFound:
      description: Product has not been found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            ProductTeamNotFound:
              value:
                errors:
                  - code: "RESOURCE_NOT_FOUND"
                    message: "Could not find ProductTeam for key ('f9518c12-6c83-4544-97db-d9dd1d64da97')"
            ProductNotFound:
              value:
                errors:
                  - code: "RESOURCE_NOT_FOUND"
                    message: "Could not find CpmProduct for key ('f9518c12-6c83-4544-97db-d9dd1d64da97', 'P.XXX-YYY')"
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errors:
              - code: "CONFLICT"
                message: "Product Team cannot be deleted as it still has associated Product Ids ['P.1X3-XYZ', 'P.4Y6-ABC']"
    SearchProductBadRequest:
      description: searchProduct Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            MissingParamValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "SearchProductQueryParams.__root__: Please provide exactly one valid query parameter: {'product_team_id', 'organisation_code'}."
            UnknownParamValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "SearchProductQueryParams.foo: extra fields not permitted"
    CreateProductTeamBadRequest:
      description: createProductTeam Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            NotPermittedValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "CreateProductTeamIncomingParams.keys.0.key_type: value is not a valid enumeration member; permitted: 'product_team_id'"
            FormatValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "CreateProductTeamIncomingParams.keys.0.key_value: Key '' does not match the expected pattern '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$' associated with key type 'product_team_id'"
            DuplicateKeyValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "CreateProductTeamIncomingParams.keys: Ensure that product_team_id only exists once within keys."
            ItemExistsValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "Item already exists"
            MissingValue:
              value:
                errors:
                  - code: "MISSING_VALUE"
                    message: "CreateProductTeamIncomingParams.ods_code: field required"
    CreateProductBadRequest:
      description: createProduct Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          examples:
            MissingValue:
              value:
                errors:
                  - code: "MISSING_VALUE"
                    message: "CreateCpmProductIncomingParams.name: field required"
            ExtraFieldsValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "CreateCpmProductIncomingParams.extra_name: extra fields not permitted"
            EmptyValueValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "CreateCpmProductIncomingParams.name: ensure this value has at least 1 characters"
            InvalidJSONValidationError:
              value:
                errors:
                  - code: "VALIDATION_ERROR"
                    message: "Invalid JSON body was provided: line 1 column 20 (char 19)"
      headers:
        Access-Control-Allow-Origin:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errors:
              - code: "UNPROCESSABLE_ENTITY"
                message: "Invalid ODS Code: could not resolve 'https://directory.spineservices.nhs.uk/ORD/2-0-0/organisations/invalid_ods_code'"
    CPMProductTeamCreate:
      description: Create ProductTeam operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductTeamResponse"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          example: "*"
    CPMProductTeamRead:
      description: Read ProductTeam operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductTeamResponse"
    CpmProductTeamDelete:
      description: Delete Product Team operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductTeamDeleteResponse"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          example: "*"
    ProductCreate:
      description: Create Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductResponse"
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
          example: "*"
    ProductRead:
      description: Read Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductResponse"
    ProductDelete:
      description: Delete Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CPMProductDeleteResponse"
    ProductSearch:
      description: Search Product operation successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductSearchResponse"
