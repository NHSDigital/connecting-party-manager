x-definitions:
  ApiGatewayIntegration:
    type: object
    x-amazon-apigateway-integration: &ApiGatewayIntegration
      type: aws_proxy
      httpMethod: POST
      responses:
        default:
          statusCode: "200"
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT

paths:
  /_status:
    get:
      operationId: status
      summary: _status endpoint for APIGEE integration
      responses:
        "200":
          $ref: "#/components/responses/StatusOK"
        "4XX":
          $ref: "#/components/responses/ClientError"
      parameters:
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      security:
        - ${authoriser_name}: []
        - app-level0: []
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_status}

  /product-teams:
    post:
      operationId: createProductTeam
      summary: Create a product team matching the given payload (excluding 'id')
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductTeam"
      parameters:
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "201":
          $ref: "#/components/responses/ProductTeam"
        "4XX":
          $ref: "#/components/responses/ClientError"
      security:
        - ${authoriser_name}: []
        - app-level0: []
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createProductTeam}

  /product-teams/{id}:
    get:
      operationId: getProductTeam
      summary: Retrieve a product team by 'id'
      parameters:
        - $ref: "#/components/parameters/PathId"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/ProductTeam"
        "4XX":
          $ref: "#/components/responses/ClientError"
      security:
        - ${authoriser_name}: []
        - app-level0: []
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readProductTeam}

  /devices:
    post:
      operationId: createDevice
      summary: Create a device matching the given payload (excluding 'id')
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Device"
      parameters:
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "201":
          $ref: "#/components/responses/Device"
        "4XX":
          $ref: "#/components/responses/ClientError"
      security:
        - ${authoriser_name}: []
        - app-level0: []
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createDevice}

  /devices/{id}:
    get:
      operationId: getDevice
      summary: Retrieve a device by 'id' or any of its keys
      parameters:
        - $ref: "#/components/parameters/PathId"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/Device"
        "4XX":
          $ref: "#/components/responses/ClientError"
      security:
        - ${authoriser_name}: []
        - app-level0: []
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readDevice}

  /devices/search/sds-endpoints:
    get:
      operationId: searchSdsEndpoint
      summary: Search for 'SDS Endpoint' devices by query parameters
      parameters:
        - $ref: "#/components/parameters/QueryOffset"
        - $ref: "#/components/parameters/QueryLimit"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/DeviceArray"
        "4XX":
          $ref: "#/components/responses/ClientError"
      security:
        - ${authoriser_name}: []
        - app-level0: []
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_searchSdsEndpoint}

  /devices/search/sds-devices:
    get:
      operationId: searchSdsDevice
      summary: Search for 'SDS Device' devices by query parameters
      parameters:
        - $ref: "#/components/parameters/QueryOffset"
        - $ref: "#/components/parameters/QueryLimit"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/DeviceArray"
        "4XX":
          $ref: "#/components/responses/ClientError"
      security:
        - ${authoriser_name}: []
        - app-level0: []
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_searchSdsDevices}
