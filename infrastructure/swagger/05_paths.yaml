---
x-definitions:
  ApiGatewayIntegration:
    type: object
    x-amazon-apigateway-integration: &ApiGatewayIntegration
      type: aws_proxy
      httpMethod: POST
      responses:
        default:
          statusCode: "200"
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT

tags:
  - name: Core Product ID Endpoints
    description: Create, Read and Delete Product IDs
  - name: Options
    description: These exist for CORS

paths:
  /_status:
    get:
      summary: Retrieve the current Status of the API (GET)
      description: >
        Get the current status of the API
      operationId: status
      tags:
        - Status
      responses:
        "200":
          $ref: "#/components/responses/StatusOK"
      parameters:
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_status}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam:
    options:
      operationId: createproductteamcors
      summary: Create a Product Team resource (OPTIONS)
      tags:
        - Options
      responses:
        "400":
          $ref: "#/components/responses/CreateProductTeamBadRequest"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'apikey,authorization,content-type,version'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        type: "mock"
      security:
        - ${authoriser_name}: []
        - app-level0: []
    post:
      operationId: createproductteam
      summary: Create a Product Team resource (POST)
      description: >
        Create a Product Team. This is needed in order to create a Product.
      tags:
        - Core Product ID Endpoints
      requestBody:
        $ref: "#/components/requestBodies/ProductTeamCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/CPMProductTeamCreate"
        "400":
          $ref: "#/components/responses/CreateProductTeamBadRequest"
        "422":
          $ref: "#/components/responses/UnprocessableContent"
      parameters:
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderAuthorization"
        - $ref: "#/components/parameters/HeaderApikey"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createProductTeam}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}:
    get:
      operationId: readproductteam
      summary: Read a Product Team resource (GET)
      description: |
        - Retrieve a Product Team using a product team ID.
      tags:
        - Core Product ID Endpoints
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/CPMProductTeamRead"
        "404":
          $ref: "#/components/responses/ProductTeamNotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readProductTeam}
      security:
        - ${authoriser_name}: []
        - app-level0: []
    delete:
      operationId: deleteproductteam
      summary: Delete a Product Team resource (DELETE)
      description: |
        - Delete a product Team using a product team ID.
      tags:
        - Core Product ID Endpoints
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/CpmProductTeamDelete"
        "404":
          $ref: "#/components/responses/ProductTeamNotFound"
        "409":
          $ref: "#/components/responses/Conflict"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_deleteProductTeam}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}/Product:
    options:
      operationId: createproductcors
      summary: Create a Product resource (OPTIONS)
      tags:
        - Options
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Headers: "'apikey,authorization,content-type,version'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        type: "mock"
      security:
        - ${authoriser_name}: []
        - app-level0: []
    post:
      operationId: createproductendpoint
      summary: Create a Product resource (POST)
      description: |
        This endpoint creates a new Product resource for the specified Product Team.
        **Requirements:**
        - A valid Product Team must exist
      tags:
        - Core Product ID Endpoints
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderAuthorization"
        - $ref: "#/components/parameters/HeaderApikey"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      requestBody:
        $ref: "#/components/requestBodies/ProductCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/ProductCreate"
        "400":
          $ref: "#/components/responses/CreateProductBadRequest"
        "404":
          $ref: "#/components/responses/ProductTeamNotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createCpmProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /Product:
    options:
      operationId: searchproductcors
      summary: Search Products (OPTIONS)
      tags:
        - Options
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'apikey,authorization,content-type,version'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        type: "mock"
      security:
        - ${authoriser_name}: []
        - app-level0: []
    get:
      operationId: searchProduct
      summary: Retrieve all Products associated with a Product Team or Organisation (GET)
      tags:
        - Core Product ID Endpoints
      parameters:
        - $ref: "#/components/parameters/ProductTeamIdQuery"
        - $ref: "#/components/parameters/OrganisationCodeQuery"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/ProductSearch"
        "400":
          $ref: "#/components/responses/SearchProductBadRequest"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_searchProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /Product/{product_id}:
    options:
      operationId: productreadactions
      summary: Product Read actions (OPTIONS)
      parameters:
        - $ref: "#/components/parameters/ProductId"
      tags:
        - Options
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Headers: "'apikey,authorization,content-type,version'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        type: "mock"
      security:
        - ${authoriser_name}: []
        - app-level0: []
    get:
      operationId: readproductendpoint
      summary: Read a Product resource (GET)
      description: |
        - Retrieve a product using a product ID.
      tags:
        - Core Product ID Endpoints
      parameters:
        - $ref: "#/components/parameters/ProductId"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/ProductRead"
        "404":
          $ref: "#/components/responses/ProductNotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readCpmProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}/Product/{product_id}:
    options:
      operationId: productactions
      summary: Product actions (OPTIONS)
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/ProductId"
      tags:
        - Options
      responses:
        "400":
          $ref: "#/components/responses/BadRequest"
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,DELETE'"
              method.response.header.Access-Control-Allow-Headers: "'apikey,authorization,content-type,version'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        type: "mock"
      security:
        - ${authoriser_name}: []
        - app-level0: []
    delete:
      operationId: deleteproductendpoint
      summary: Delete a Product resource (DELETE)
      description: |
        - Delete a product using a product team ID and product ID.
      tags:
        - Core Product ID Endpoints
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/ProductId"
        - $ref: "#/components/parameters/HeaderVersion"
        - $ref: "#/components/parameters/HeaderRequestId"
        - $ref: "#/components/parameters/HeaderCorrelationId"
      responses:
        "200":
          $ref: "#/components/responses/ProductDelete"
        "404":
          $ref: "#/components/responses/ProductDeleteNotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_deleteCpmProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []
