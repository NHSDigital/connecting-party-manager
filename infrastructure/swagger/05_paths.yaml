---
x-definitions:
  ApiGatewayIntegration:
    type: object
    x-amazon-apigateway-integration: &ApiGatewayIntegration
      type: aws_proxy
      httpMethod: POST
      responses:
        default:
          statusCode: "200"
      passthroughBehavior: when_no_match
      contentHandling: CONVERT_TO_TEXT

  RequestHeaders:
    - &RequestHeaderVersion
      in: header
      name: version
      schema:
        $ref: "#/components/schemas/Version"
    - &RequestHeaderRequestId
      in: header
      name: x-request-id
      schema:
        $ref: "#/components/schemas/RequestId"
    - &RequestHeaderCorrelationId
      in: header
      name: x-correlation-id
      schema:
        $ref: "#/components/schemas/CorrelationId"
    - headers: &RequestHeaders
        parameters:
          - *RequestHeaderVersion
          - *RequestHeaderRequestId
          - *RequestHeaderCorrelationId

paths:
  /_status:
    get:
      summary: _status endpoint for APIGEE integration
      operationId: status
      responses:
        "200":
          $ref: "#/components/responses/StatusOK"
        "404":
          $ref: "#/components/responses/NotFound"
      <<: *RequestHeaders
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_status}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam:
    post:
      operationId: createproductteam
      summary: createProductTeam endpoint for APIGEE integration
      requestBody:
        $ref: "#/components/requestBodies/ProductTeamCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/ProductTeamCreate"
        "400":
          $ref: "#/components/responses/BadRequest"
        "422":
          $ref: "#/components/responses/UnprocessableContent"
      <<: *RequestHeaders
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createProductTeam}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}:
    get:
      operationId: readproductteam
      summary: readProductTeam endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        "200":
          $ref: "#/components/responses/ProductTeamRead"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readProductTeam}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}/Product:
    get:
      operationId: searchCpmProduct
      summary: searchCpmProduct endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        "200":
          $ref: "#/components/responses/ProductSearch"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_searchCpmProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []
    post:
      operationId: createproductendpoint
      summary: createProduct endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      requestBody:
        $ref: "#/components/requestBodies/ProductCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/ProductCreate"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createCpmProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}/Product/{product_id}:
    get:
      operationId: readproductendpoint
      summary: readProduct endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/ProductId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        responses:
        "200":
          $ref: "#/components/responses/ProductRead"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readCpmProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []

    delete:
      operationId: deleteproductendpoint
      summary: deleteProduct endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/ProductId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        responses:
        "204":
          description: Delete Product operation successful
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_deleteCpmProduct}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}/Product/Epr:
    post:
      operationId: createproductforeprendpoint
      summary: createCpmProductForEpr endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      requestBody:
        $ref: "#/components/requestBodies/ProductCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/EprProductCreate"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createCpmProductForEpr}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /ProductTeam/{product_team_id}/Product/{product_id}/DeviceReferenceData:
    post:
      operationId: createDeviceReferenceData
      summary: createDeviceReferenceData endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/ProductId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      requestBody:
        $ref: "#/components/requestBodies/DeviceReferenceDataCreateRequestBody"
      responses:
        responses:
        "201":
          $ref: "#/components/responses/DeviceRefDataCreate"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createDeviceReferenceData}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  ? /ProductTeam/{product_team_id}/Product/{product_id}/DeviceReferenceData/{device_reference_data_id}
  : get:
      operationId: readDeviceReferenceData
      summary: readDeviceReferenceData endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/ProductTeamId"
        - $ref: "#/components/parameters/ProductId"
        - $ref: "#/components/parameters/DeviceReferenceDataId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        responses:
        "200":
          $ref: "#/components/responses/DeviceRefDataRead"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readDeviceReferenceData}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /Device:
    post:
      responses:
        "201":
          $ref: "#/components/responses/DeviceCreate"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
      <<: *RequestHeaders
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_createDevice}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /Device/{id}:
    get:
      parameters:
        - name: id
          in: path
          required: true
          description: Device identifier
          schema:
            type: string
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        "201":
          $ref: "#/components/responses/DeviceRead"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readDevice}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /searchSdsDevice:
    get:
      operationId: searchsdsdevice
      summary: searchSdsDevice endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/NhsAsClient"
        - $ref: "#/components/parameters/NhsAsClientInteration"
        - $ref: "#/components/parameters/NhsMhsManOrg"
        - $ref: "#/components/parameters/NhsMhsPartyKey"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        "200":
          $ref: "#/components/responses/SdsDeviceSearch"
        "400":
          $ref: "#/components/responses/BadRequest"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_searchSdsDevice}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /searchSdsEndpoint:
    get:
      operationId: searchsdsendpoint
      summary: searchSdsEndpoint endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/NhsIdCode"
        - $ref: "#/components/parameters/NhsMhsInteration"
        - $ref: "#/components/parameters/NhsMhsPartyKey"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        "200":
          $ref: "#/components/responses/SdsEndpointSearch"
        "400":
          $ref: "#/components/responses/BadRequest"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_searchSdsEndpoint}
      security:
        - ${authoriser_name}: []
        - app-level0: []

  /Questionnaire/{questionnaire_id}:
    get:
      operationId: readQuestionnaire
      summary: readQuestionnaire endpoint for APIGEE integration
      parameters:
        - $ref: "#/components/parameters/QuestionnaireId"
        - *RequestHeaderVersion
        - *RequestHeaderRequestId
        - *RequestHeaderCorrelationId
      responses:
        "200":
          $ref: "#/components/responses/QuestionnaireRead"
        "404":
          $ref: "#/components/responses/NotFound"
      x-amazon-apigateway-integration:
        <<: *ApiGatewayIntegration
        uri: ${method_readQuestionnaire}
      security:
        - ${authoriser_name}: []
        - app-level0: []
