{
  "Comment": "SDS ETL",
  "TimeoutSeconds": 21600,
  "StartAt": "root",
  "States": {
    "root": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "manual-retry-changelog",
          "States": {
            "manual-retry-changelog": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.manual_retry",
                  "BooleanEquals": true,
                  "Next": "manual-retry-state"
                }
              ],
              "Default": "parse-changelog-number"
            },
            "manual-retry-state": {
              "Type": "Pass",
              "End": true
            },
            "parse-changelog-number": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.changelog_number_end",
                  "IsPresent": true,
                  "Next": "write-changelog-number"
                }
              ],
              "Default": "no-changelog-number"
            },
            "write-changelog-number": {
              "Type": "Task",
              "End": true,
              "Parameters": {
                "Body.$": "$.changelog_number_end",
                "Bucket": "${etl_bucket}",
                "Key": "${changelog_key}"
              },
              "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
            },
            "no-changelog-number": {
              "Type": "Pass",
              "End": true
            }
          }
        },
        {
          "StartAt": "parse-etl-type",
          "States": {
            "parse-etl-type": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.etl_type",
                  "StringEquals": "bulk",
                  "Next": "extract-bulk"
                },
                {
                  "Variable": "$.etl_type",
                  "StringEquals": "update",
                  "Next": "extract-update"
                }
              ]
            },
            "extract-bulk": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload": {},
                "FunctionName": "${extract_worker_arn}:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "Next": "extract-bulk-result"
            },
            "extract-bulk-result": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.error_message",
                  "IsNull": true,
                  "Next": "etl-bulk"
                }
              ],
              "Default": "etl-stopped"
            },
            "etl-bulk": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${etl_bulk_state_machine_arn}",
                "Input": {
                  "StatePayload": {},
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "OutputPath": "$.Output",
              "Next": "etl-bulk-result"
            },
            "etl-bulk-result": {
              "Type": "Choice",
              "Choices": [
                {
                  "Or": [
                    {
                      "Not": {
                        "Variable": "$.error_message",
                        "IsNull": true
                      }
                    },
                    {
                      "And": [
                        {
                          "Variable": "$.processed_records",
                          "NumericEquals": 0
                        },
                        {
                          "Variable": "$.unprocessed_records",
                          "NumericEquals": 0
                        }
                      ]
                    }
                  ],
                  "Next": "etl-stopped"
                }
              ],
              "Default": "etl-bulk"
            },
            "extract-update": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload": {},
                "FunctionName": "${extract_worker_arn}:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "Next": "extract-update-result"
            },
            "extract-update-result": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.error_message",
                  "IsNull": true,
                  "Next": "etl-update"
                }
              ],
              "Default": "etl-stopped"
            },
            "etl-update": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${etl_update_state_machine_arn}",
                "Input": {
                  "StatePayload": {},
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "OutputPath": "$.Output",
              "Next": "etl-update-result"
            },
            "etl-update-result": {
              "Type": "Choice",
              "Choices": [
                {
                  "Or": [
                    {
                      "Not": {
                        "Variable": "$.error_message",
                        "IsNull": true
                      }
                    },
                    {
                      "And": [
                        {
                          "Variable": "$.processed_records",
                          "NumericEquals": 0
                        },
                        {
                          "Variable": "$.unprocessed_records",
                          "NumericEquals": 0
                        }
                      ]
                    }
                  ],
                  "Next": "etl-stopped"
                }
              ],
              "Default": "etl-update"
            },
            "etl-stopped": {
              "Type": "Pass",
              "End": true
            }
          }
        }
      ],
      "Next": "notify"
    },
    "notify": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${notify_arn}:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "parse-status"
    },
    "parse-status": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$",
          "StringEquals": "fail",
          "Next": "fail"
        }
      ],
      "Default": "delete-state-lock"
    },
    "delete-state-lock": {
      "Type": "Task",
      "Parameters": {
        "Bucket": "${etl_bucket}",
        "Key": "${etl_state_lock_key}"
      },
      "Resource": "arn:aws:states:::aws-sdk:s3:deleteObject",
      "Next": "success"
    },
    "fail": {
      "Type": "Fail"
    },
    "success": {
      "Type": "Succeed"
    }
  }
}
