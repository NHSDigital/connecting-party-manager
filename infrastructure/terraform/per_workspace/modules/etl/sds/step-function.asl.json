{
  "Comment": "SDS ETL",
  "TimeoutSeconds": 3600,
  "StartAt": "root",
  "States": {
    "root": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "parse-changelog-number",
          "States": {
            "parse-changelog-number": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.changelog-number",
                  "IsPresent": true,
                  "Next": "write-changelog-number"
                }
              ],
              "Default": "no-changelog-number"
            },
            "write-changelog-number": {
              "Type": "Task",
              "End": true,
              "Parameters": {
                "Body.$": "$.changelog-number",
                "Bucket": "${etl_bucket}",
                "Key": "${changelog_key}"
              },
              "Resource": "arn:aws:states:::aws-sdk:s3:putObject"
            },
            "no-changelog-number": {
              "Type": "Pass",
              "End": true
            }
          }
        },
        {
          "StartAt": "parse-init",
          "States": {
            "parse-init": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.init",
                  "StringEquals": "extract",
                  "Next": "extract"
                }
              ],
              "Default": "invalid-init-value"
            },
            "extract": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "${extract_worker_arn}:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "Next": "extract-result"
            },
            "extract-result": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.error_message",
                  "IsNull": true,
                  "Next": "transform"
                }
              ],
              "Default": "worker-failed"
            },
            "transform": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "${transform_worker_arn}:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "Next": "transform-result"
            },
            "transform-result": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.error_message",
                  "IsNull": true,
                  "Next": "load"
                }
              ],
              "Default": "worker-failed"
            },
            "load": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "${load_worker_arn}:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "Next": "load-result"
            },
            "load-result": {
              "Type": "Choice",
              "Choices": [
                {
                  "Not": {
                    "Variable": "$.error_message",
                    "IsNull": true
                  },
                  "Next": "worker-failed"
                },
                {
                  "And": [
                    {
                      "Variable": "$.error_message",
                      "IsNull": true
                    },
                    {
                      "Not": {
                        "Variable": "$.unprocessed_records",
                        "NumericEquals": 0
                      }
                    }
                  ],
                  "Next": "load"
                }
              ],
              "Default": "load-successful"
            },
            "load-successful": {
              "Type": "Pass",
              "End": true
            },
            "worker-failed": {
              "Type": "Pass",
              "End": true
            },
            "invalid-init-value": {
              "Type": "Fail",
              "Error": "InvalidInitValue",
              "Cause": "Invalid Value of Init"
            }
          }
        }
      ],
      "Next": "notify"
    },
    "notify": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${notify_arn}:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2
        }
      ],
      "Next": "success"
    },
    "success": {
      "Type": "Succeed"
    }
  }
}
