name: "Synchronise cache"
description: "Synchronise cache"
inputs:
  save-or-restore:
    description: "'save' or 'restore' to/from cache"
    required: true
  cache-suffix:
    description: "[Optional] Cache prefix (e.g. 'base')"
    required: false
    default: ""
  paths-to-cache:
    description: |
      [Optional] Path to the items to be saved/restored.
      These should generally include all:
        * Makefile "targets" (e.g. .venv); and
        * Makefile "prerequisites" (e.g. pyproject.toml)
    required: false
    default: |
      .timestamp
      .downloads
      .tool-versions
      poetry.lock
      src
      infrastructure
      !**/.terraform/modules/**/*
  third-party-cache-paths:
    description: Separate cache for common library builds
    required: false
    default: |
      .venv
      pyproject.toml
  restore-third-party-cache:
    description: Separate cache for common library builds
    required: false

runs:
  using: "composite"
  steps:
    - id: set-date
      shell: bash
      run: echo "date=$(date +'%Y-%m-%d-%M:%S')" >> $GITHUB_OUTPUT

    - if: ${{ inputs.save-or-restore == 'restore' }}
      id: restore-cache
      uses: actions/cache/restore@v3
      with:
        path: ${{ inputs.paths-to-cache }}
        key: "dummy"
        restore-keys: |
          ${{ env.GITHUB_SHA_SHORT }}-${{ inputs.cache-suffix == '' && 'head' || inputs.cache-suffix }}-

    - if: ${{ inputs.restore-third-party-cache == 'true'}}
      id: restore-third-party-cache
      uses: actions/cache/restore@v3
      with:
        path: ${{ inputs.third-party-cache-paths }}
        key: ${{ hashFiles( 'pyproject.toml' ) }}
        restore-keys: |
          ${{ hashFiles( 'pyproject.toml' ) }}

    # # For debugging, uncomment the following:
    # - id: tree
    #   shell: bash
    #   run: tree -D -I '__pycache__|.git|.venv|.hypothesis|.pytest_cache'

    - if: ${{ inputs.save-or-restore == 'save' }}
      id: save-cache
      uses: actions/cache/save@v3
      with:
        path: ${{ inputs.paths-to-cache }}
        key: ${{ env.GITHUB_SHA_SHORT }}-${{ inputs.cache-suffix == '' && 'head' || inputs.cache-suffix }}-${{ steps.set-date.outputs.date }}

    - if: ${{ inputs.save-or-restore == 'save' && steps.restore-third-party-cache.outputs.cache-hit != 'true'}}
      id: save-third-party-cache
      uses: actions/cache/save@v3
      with:
        path: ${{ inputs.third-party-cache-paths }}
        key: ${{ hashFiles( 'pyproject.toml' ) }}
