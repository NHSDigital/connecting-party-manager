name: "Make"
description: "Run makefile commands"
inputs:
  command:
    description: "Makefile command (and args) to run."
    required: true
  requires-aws:
    description: "[Optional] Assume the CI AWS Role during this operation?"
    required: false
    default: ""
  cache-suffix:
    description: "[Optional] Cache suffix (e.g. 'base')"
    required: false
    default: ""
  restore-from-cache:
    description: "[Optional] restore from cache?"
    required: false
    default: "true"
  save-to-cache:
    description: "[Optional] save to cache?"
    required: false
    default: "false"
  paths-to-cache:
    description: "[Optional] paths to cache?"
    required: false
runs:
  using: "composite"
  steps:
    - name: Set "short SHA" environment variable
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
      shell: bash

    - name: Restore from the cache
      if: ${{ inputs.restore-from-cache == 'true' }}
      uses: ./.github/actions/components/caching/
      with:
        save-or-restore: "restore"
        cache-suffix: ${{ inputs.cache-suffix }}

    - name: Configure AWS Credentials
      id: configure-aws-credentials
      if: inputs.requires-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.CI_ROLE_NAME }}
        role-session-name: github-actions-ci-${{ env.GITHUB_SHA_SHORT }}
        aws-region: eu-west-2
        output-credentials: true
        mask-aws-account-id: true

    - name: Mask AWS credentials
      if: inputs.requires-aws
      shell: bash
      run: |
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-account-id }}" \
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-access-key-id }}" \
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-secret-access-key }}" \
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-session-token }}"

    - name: Run "make" command
      shell: bash
      run: |
        make ${{ inputs.command }} \
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
          AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.configure-aws-credentials.outputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.configure-aws-credentials.outputs.aws-secret-access-key }}
        AWS_SESSION_TOKEN: ${{ steps.configure-aws-credentials.outputs.aws-session-token }}

    - name: Save to the cache with path
      if: ${{ inputs.save-to-cache == 'true' &&  inputs.paths-to-cache}}
      uses: ./.github/actions/components/caching/
      with:
        save-or-restore: "save"
        cache-suffix: ${{ inputs.cache-suffix }}
        paths-to-cache: ${{ inputs.paths-to-cache }}

    - name: Save to the cache default paths
      if: ${{ inputs.save-to-cache == 'true' }}
      uses: ./.github/actions/components/caching/
      with:
        save-or-restore: "save"
        cache-suffix: ${{ inputs.cache-suffix }}
