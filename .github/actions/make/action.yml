name: "Make"
description: "Run makefile commands"
inputs:
  command:
    description: "Makefile command (and args) to run."
    required: true
  requires-aws:
    description: "[Optional] Assume the CI AWS Role during this operation?"
    required: false
    default: ""
  cache-save:
    description: "[Optional] 'save' instead of 'restore' from cache"
    required: false
    default: "restore"
  cache-suffix:
    description: "[Optional] Cache suffix (e.g. 'base')"
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - name: Set "short SHA" environment variable
      run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
      shell: bash

    - name: Save cache
      uses: actions/cache/save@v3
      if: ${{ inputs.cache-save == 'save' }}
      with:
        path: |
          .venv
          .timestamp
          **/dist/*zip
          **/tfplan
          **/swagger.yaml
          **/infrastructure/terraform/**/output.json
          .downloads
          **/fhir/r4/*models.py
        key: ${{ env.GITHUB_SHA_SHORT }}-${{ inputs.cache-suffix == '' && 'head' || inputs.cache-suffix }} #-${{ steps.date.outputs.date }}

    - name: Restore cache
      uses: actions/cache/save@v3
      if: ${{ inputs.cache-save == 'restore' }}
      with:
        path: |
          .venv
          .timestamp
          **/dist/*zip
          **/tfplan
          **/swagger.yaml
          **/infrastructure/terraform/**/output.json
          .downloads
          **/fhir/r4/*models.py
        key: ${{ env.GITHUB_SHA_SHORT }}-${{ inputs.cache-suffix == '' && 'head' || inputs.cache-suffix }} #-${{ steps.date.outputs.date }}

    - name: Print stuff
      shell: bash
      run: |
        sudo apt-get install tree -y
        tree

    - name: Configure AWS Credentials
      id: configure-aws-credentials
      if: inputs.requires-aws
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.CI_ROLE_NAME }}
        role-session-name: github-actions-ci-${{ env.GITHUB_SHA_SHORT }}
        aws-region: eu-west-2
        output-credentials: true
        mask-aws-account-id: true

    - name: Mask AWS credentials
      if: inputs.requires-aws
      shell: bash
      run: |
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-account-id }}" \
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-access-key-id }}" \
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-secret-access-key }}" \
        echo "::add-mask:: ${{ steps.configure-aws-credentials.outputs.aws-session-token }}"

    - name: Run "make" command
      shell: bash
      run: |
        make ${{ inputs.command }} \
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \
          AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.configure-aws-credentials.outputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.configure-aws-credentials.outputs.aws-secret-access-key }}
        AWS_SESSION_TOKEN: ${{ steps.configure-aws-credentials.outputs.aws-session-token }}
