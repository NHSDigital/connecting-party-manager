name: "Workflow: Merge to Main"

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  actions: write

jobs:
  make-tag:
    runs-on: [self-hosted, ci]
    permissions: write-all
    name: Create a tag from main
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Create 'env.tag' from the latest release
        run: |
          TAG=$(make changelog--get-latest-release)
          echo "tag=${TAG}" >> $GITHUB_ENV

      - name: Create tag named from 'env.tag'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.tag }}',
              sha: context.sha
            })
    outputs:
      tag: ${{ env.tag }}

  create-coverage-name:
    runs-on: [self-hosted, ci]
    needs: [make-tag]
    outputs:
      coverage-name: ${{ steps.create_coverage_name.outputs.coverage-name }}
    steps:
      - id: create_coverage_name
        run: |
          coverage_artifact_branch_name=$(echo ${{ needs.make-tag.outputs.tag }} | cut -c 9-)
          echo "coverage-name=${coverage_artifact_branch_name}" >> $GITHUB_OUTPUT

  test--coverage-sonar:
    runs-on: [self-hosted, ci]
    needs: [create-coverage-name, make-tag]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v9
        with:
          name: "${{ needs.create-coverage-name.outputs.coverage-name }}-coverage"
          branch: "${{ needs.make-tag.outputs.tag }}"
          workflow: pull-requests.yml
          workflow_conclusion: success
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io

  set-success:
    name: Set Success
    needs: [make-tag]
    runs-on: [self-hosted, ci]
    steps:
      - name: Set success env var
        run: echo "success"
    outputs:
      success: "succeeded"

  message-slack:
    name: Notify slack of merge to main
    needs: [make-tag, set-success]
    runs-on: [self-hosted, ci]
    steps:
      - name: Catch failed steps
        id: catch-failed-step
        uses: ./.github/actions/catch-failed-step
      - name: Send merge result to slack
        id: slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook-type: webhook-trigger
          payload: |
            {
              "tag": "${{ needs.make-tag.outputs.tag}}",
              "branch": "main",
              "caller": "${{ github.triggering_actor }}",
              "result":  "${{ needs.set-success.outputs.success && needs.set-success.outputs.success || 'failed' }}",
              "result_detail": "${{ needs.set-success.outputs.success && 'None' || steps.catch-failed-step.outputs.failed-step-name }}",
              "action_url": "${{ format('{0}/{1}/actions/runs/{2}/attempts/{3}', github.server_url, github.repository, github.run_id, github.run_attempt) }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.MAIN_MERGE_SLACK_HOOK_URL }}
