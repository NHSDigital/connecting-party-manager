name: Pull Request

on: pull_request

permissions:
  id-token: write
  contents: read
  actions: write

env:
  BASE_CACHE_SUFFIX: base
  AWS_DEFAULT_REGION: eu-west-2
  BASE_BRANCH_NAME: ${{ github.event.pull_request.base.ref }}
  BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
  TF_CLI_ARGS: -no-color

jobs:
  create-timestamp:
    runs-on: [self-hosted, ci]
    outputs:
      timestamp: ${{ steps.create_timestamp.outputs.timestamp }}
    steps:
      - id: create_timestamp
        run: |
          echo "timestamp=$(date -d "+3 days" "+%Y.%m.%d.%H.%M.%S")" >> $GITHUB_OUTPUT

  workflow--check--branch-name:
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: workflow--check--branch-name

  build-head:
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: build

  build-base:
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BASE_BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: build
          cache-suffix: ${{ env.BASE_CACHE_SUFFIX }}

  workflow--codebase-checks:
    runs-on: [self-hosted, ci]
    needs: [workflow--check--branch-name, build-head]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: workflow--codebase-checks

  test--unit:
    needs: [build-head]
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/pytest-with-rerun/
        with:
          test-type: unit

  test--feature--local:
    needs: [build-head]
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: test--feature--local

  helpers--truststore-pull:
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: helpers--truststore-pull WORKSPACE=ref

  terraform-base-build:
    needs: [create-timestamp, build-base, helpers--truststore-pull]
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BASE_BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: terraform--plan WORKSPACE="ci-${{ needs.create-timestamp.outputs.timestamp }}" TF_CLI_ARGS=${{ env.TF_CLI_ARGS }}
          cache-suffix: ${{ env.BASE_CACHE_SUFFIX }}
          aws-role-to-assume: ${{ secrets.CI_ROLE_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: terraform--apply WORKSPACE="ci-${{ needs.create-timestamp.outputs.timestamp }}" TF_CLI_ARGS=${{ env.TF_CLI_ARGS }}
          cache-suffix: ${{ env.BASE_CACHE_SUFFIX }}
          aws-role-to-assume: ${{ secrets.CI_ROLE_NAME }}

  terraform-head-build:
    needs:
      [
        create-timestamp,
        build-head,
        workflow--codebase-checks,
        test--unit,
        test--feature--local,
        helpers--truststore-pull,
        terraform-base-build,
      ]
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: terraform--plan WORKSPACE="ci-${{ needs.create-timestamp.outputs.timestamp }}" TF_CLI_ARGS=${{ env.TF_CLI_ARGS }}
          aws-role-to-assume: ${{ secrets.CI_ROLE_NAME }}
      - uses: ./.github/actions/make/
        with:
          command: terraform--apply WORKSPACE="ci-${{ needs.create-timestamp.outputs.timestamp }}" TF_CLI_ARGS=${{ env.TF_CLI_ARGS }}
          aws-role-to-assume: ${{ secrets.CI_ROLE_NAME }}

  test--integration:
    needs:
      [
        build-head,
        workflow--codebase-checks,
        test--unit,
        test--feature--local,
        terraform-head-build,
      ]
    runs-on: [self-hosted, ci]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - uses: ./.github/actions/pytest-with-rerun/
        with:
          test-type: integration
          aws-role-to-assume: ${{ secrets.CI_ROLE_NAME }}
