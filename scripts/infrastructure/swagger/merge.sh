set -e

PATH_TO_SWAGGER_INFRA=${PWD}/infrastructure/swagger
PATH_TO_SWAGGER_DIST=${PATH_TO_SWAGGER_INFRA}/dist
PATH_TO_SWAGGER_BUILD=${PATH_TO_SWAGGER_DIST}/build
PATH_TO_SWAGGER_AWS=${PATH_TO_SWAGGER_DIST}/aws
PATH_TO_SWAGGER_PUBLIC=${PATH_TO_SWAGGER_DIST}/public
PATH_TO_SWAGGER_APIGEE=${PATH_TO_SWAGGER_DIST}/apigee

_01_COMPONENT_MERGE_FILE=${PATH_TO_SWAGGER_BUILD}/_01_component_merge.yaml
_02_CLEAN_FILE=${PATH_TO_SWAGGER_BUILD}/_02_clean.yaml

AWS_SWAGGER_FILE=${PATH_TO_SWAGGER_AWS}/swagger.yaml
PUBLIC_SWAGGER_FILE=${PATH_TO_SWAGGER_PUBLIC}/swagger.yaml
APIGEE_SWAGGER_FILE=${PATH_TO_SWAGGER_APIGEE}/swagger.yaml



function validate_yaml {
    # Initial validation to exit early if invalid YAML
    # as per https://mikefarah.gitbook.io/yq/usage/tips-and-tricks#validating-yaml-files
    yq --exit-status 'tag == "!!map" or tag== "!!seq"' ${1} > /dev/null || return 1
}

function merge_base() {
    mkdir -p ${PATH_TO_SWAGGER_BUILD}
    _01_component_merge && _02_clean
}


function _01_component_merge(){
    swagger_files=$(find ${PATH_TO_SWAGGER_INFRA}/*yaml | sort -g)
    yq eval-all '. as $item ireduce ({}; . * $item)' ${PATH_TO_SWAGGER_INFRA}/00_base.yaml ${swagger_files} > ${_01_COMPONENT_MERGE_FILE}
    validate_yaml ${_01_COMPONENT_MERGE_FILE}
}

function _02_clean(){
    cat ${_01_COMPONENT_MERGE_FILE} |
        # Remove commented lines
        yq '... comments=""' |
        # Replace snake case terms, which are invalid in ApiGateway
        yq 'with(.components.schemas; with_entries(.key |= sub("_","")))' |
        yq 'with(.components.parameters; with_entries(.key |= sub("_","")))' |
        yq '(.. | select(has("$ref")).$ref) |= sub("_","")' |
        # Remove autogenerated parts that we don't want
        yq 'del(.paths.*.post.requestBody.content."application/x-www-form-urlencoded")' |
        yq 'del(.x-ibm-configuration)' |
        yq 'del(.components.schemas.*.discriminator)' |
        yq 'explode(.)' |
        yq '(.. | select(style == "single")) style |= "double"' |
        # Remove null dead-ends
        yq 'del(.. | select(. == null))' \
            > ${_02_CLEAN_FILE}
    validate_yaml ${_02_CLEAN_FILE}
}

function _render_template(){
    poetry run python scripts/infrastructure/swagger/render_template.py $1
}

function generate_apigee_swagger(){
    # Remove fields not required for apigee
    mkdir -p ${PATH_TO_SWAGGER_APIGEE}

    _render_template ${_02_CLEAN_FILE} |
        yq 'del(.paths.*.*.x-amazon-apigateway-integration)' |
        yq 'del(.x-definitions)' |
        yq 'del(.security)' |
        yq 'del(.tags)' |
        yq 'del(.paths.*.*.tags)' |
        yq 'del(.paths.*.*.security[] | select(has("${authoriser_name}")))' |
        yq 'del(.components.securitySchemes."${authoriser_name}")' \
            > ${APIGEE_SWAGGER_FILE}
    echo "Generated ${APIGEE_SWAGGER_FILE}"
    validate_yaml ${APIGEE_SWAGGER_FILE}
}

function generate_public_swagger(){
    # Remove fields not required for public docs
    # * AWS specific stuff, including security & lambdas
    # * security tags
    # * API catalogue dislikes tags
    # * /_status not public (and so also don't need StatusOK)

    mkdir -p ${PATH_TO_SWAGGER_PUBLIC}
    cat ${_02_CLEAN_FILE} |
        # yq 'with(.paths.*.*.responses.*.content; with_entries(.key |= . + ";version=1" ))' |
        # yq 'with(.components.requestBodies.*.content; with_entries(.key |= . + ";version=1" ))' |
        # yq 'with(.components.responses.*.content; with_entries(.key |= . + ";version=1" ))' |
        yq 'del(.paths.*.*.x-amazon-apigateway-integration)' |
        yq 'del(.x-*)' |
        yq 'del(.paths.*.*.security)' |
        yq 'del(.security)' |
        yq 'del(.tags)' |
        yq 'del(.paths.*.*.tags)' |
        yq 'del(.paths./_status)' |
        yq 'del(.. | select(has("StatusOK")).StatusOK)' |
        yq 'del(.components.securitySchemes."${authoriser_name}")' \
            > ${PUBLIC_SWAGGER_FILE}
    echo "Generated ${PUBLIC_SWAGGER_FILE}"
    validate_yaml ${PUBLIC_SWAGGER_FILE}
}


function generate_aws_swagger(){
    # Remove fields not valid on AWS API Gateway but otherwise required in public docs
    # * 4XX codes

    mkdir -p ${PATH_TO_SWAGGER_AWS}
    cat ${_02_CLEAN_FILE} |
        yq 'del(.x-*)' |
        yq 'del(.. | select(has("4XX")).4XX)' \
            > ${AWS_SWAGGER_FILE}
    echo "Generated ${AWS_SWAGGER_FILE}"
    validate_yaml ${AWS_SWAGGER_FILE}
}

# Expose the functions in this file publicly
$@
